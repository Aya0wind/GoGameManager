// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	admin "l4d2/service/l4d2/internal/handler/admin"
	user "l4d2/service/l4d2/internal/handler/user"
	"l4d2/service/l4d2/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/api/admin/server/status",
				Handler: admin.GetServerStatusHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/admin/server/plugins",
				Handler: admin.GetServerPluginsHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/admin/map/group",
				Handler: admin.GetMapGroupHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/admin/map/group/:id",
				Handler: admin.GetMapGroupByIDHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/api/admin/map/group/:id",
				Handler: admin.DeleteMapGroupByIDHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/admin/map/file/:id",
				Handler: admin.GetMapFilesByGroupIDHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/admin/map/upload/verify",
				Handler: admin.UploadMapFileHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/admin/map/upload",
				Handler: admin.UploadMapFileNoVerifyHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/admin/command/exec",
				Handler: admin.ExecuteCommandHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/admin/plugin/enable",
				Handler: admin.EnablePluginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/admin/plugin/disable",
				Handler: admin.DisablePluginHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/admin/command/template",
				Handler: admin.GetCommandTemplatesHandler(serverCtx),
			},
		},
		//rest.WithJwt(serverCtx.Config.AdminAuth.AccessSecret),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/user/login",
				Handler: user.LoginHandler(serverCtx),
			},
		},
	)
}
